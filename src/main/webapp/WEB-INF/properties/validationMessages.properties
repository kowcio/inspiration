#http://stackoverflow.com/questions/4082924/jsr-303-type-checking-before-binding
#As you mentioned, you need a user-friendly message in messages.properties. You can use one of the following message codes (with different levels of selectivity):
#
#    typeMismatch.section.value
#    typeMismatch.value
#    typeMismatch.int
#    typeMismatch
#
#		Also, when you don't know message code, you can simply print the 
#		BindingResult - its toString() returns the full description of the binding errors.

#[ConstraintName].[ClassName].[FieldName]=[Message]

typeMismatch.circle.radius =Circle needs a decimal value - integers (msg.prop files error).
typeMismatch.square.a = 	Square needs a decimal value - integers (msg.prop files error).
typeMismatch.triangle.a = 	Triangle needs a decimal value - integers (msg.prop files error).
typeMismatch.triangle.h = 	Triangle needs a decimal value - integers (msg.prop files error).
#This code is in validator - when present here this msg will be shown, if there is no code the default msg in
#valdiator will be displayed 
NegativeValue.square.a	=	Square side can`t be negative (msg.prop files error)
methodInvocation.circle.radius = "methodInvocation - UnexpectedTypeException error code provide an integer value CIRCLE (msg.prop files error)"
methodInvocation.figurebox.circle.radius ="methodInvocation - UnexpectedTypeException error code provide an integer value FB (msg.prop files error)" 